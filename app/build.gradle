//声明是Android程序
apply plugin: 'com.android.application'

//编译时间
def releaseTime() {
    return new Date().format('yyyy-MM-dd', TimeZone.getTimeZone('UTC'))
}

android {
    //编译SDK的版本
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    //Build Tools的版本
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    //默认配置（如果其他渠道没有特殊指定内容，会优先使用默认配置进行构建包）
    defaultConfig {
        //应用包名
        applicationId "com.mhome.gradledeploy"
        //dex突破65535的限制
        multiDexEnabled true
        //正式环境API接口地址
        buildConfigField 'String', 'API_URL', '"http://xxx.official"'
        //应用支撑最小SDK版本
        minSdkVersion rootProject.ext.android.minSdkVersion
        //应用目标SDK版本
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 100
        versionName '1.0.0'
    }
    //签名配置
    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }

    }

    buildTypes {
        //预发布release版本
        release {
            //是否进行混淆
            minifyEnabled false
            //是否启动zipAlign优化
            zipAlignEnabled false
            //是否移除无用的resource文件
            shrinkResources true
            //混淆文件的位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名配置
            signingConfig signingConfigs.release
        }
    }

    //重命名安装包
    applicationVariants.all { variant ->
        variant.outputs.each {
            output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    def apkType = ""
                    if (variant.flavorName.equals("mhome")){
                        apkType = "mhome"
                    }else if(variant.flavorName.equals("dev")){
                        apkType = "dev"
                    }
                    def fileName = new File(output.outputFile.getParent(), apkType + "-V${variant.versionName}-${releaseTime()}.apk")
                    output.outputFile = fileName
                }
        }
    }

    //删除unaligned apk
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            if (output.zipAlign != null) {
                output.zipAlign.doLast {
                    output.zipAlign.inputFile.delete()
                }
            }
        }
    }

    //渠道包
    productFlavors {
        //测试环境专用
        dev {
            applicationId 'com.mhome.debug'
            //测试环境配置API接口地址
            buildConfigField 'String', 'API_URL', '"http://xxx.debug"'
            versionCode 101
            versionName '1.0.1'
        }
        //正式发布环境
        mhome { }
    }

    //多渠道配置
    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [CHANNEL_ID_VALUE: name]
    }

    //执行lint检查，有任何的错误或者警告提示，都会终止构建
    lintOptions {
        disable 'MissingTranslation', 'ExtraTranslation'
        //在打包Release版本的时候进行检测,可以打开，这样报错还会显示出来
        checkReleaseBuilds false
        //abortOnError一定要设为false，这样即使有报错也不会停止打包了
        abortOnError false
    }
}

dependencies {
    //编译libs目录下的所有jar包
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.0.0'
}
